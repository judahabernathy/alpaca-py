openapi: 3.1.0
info:
  title: Alpaca Wrapper
  version: 1.1.0
  description: 'All endpoints require the `X-API-Key` header; the `api_key` query
    parameter is

    supported as a compatibility fallback. The service propagates Alpaca''s rate

    limits as HTTP 429 responses and surfaces the upstream `Retry-After` header.

    When `extended_hours` is enabled the order payload must remain a DAY limit

    order, include `limit_price`, and omit advanced `order_class` values.'
  license:
    name: Proprietary
    url: https://alpaca-py-production.up.railway.app/legal
paths:
  /healthz:
    get:
      summary: Healthz
      operationId: healthz_healthz_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '429':
          description: Rate limited
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: Explanation of the rate limit condition.
                additionalProperties: true
  /v2/orders/sync:
    post:
      summary: Order Create Sync
      description: 'Synchronously mirror `/v2/orders` in the current thread.


        Applies the limit guard (extended-hours must be DAY limit orders)

        and surfaces upstream HTTP 429 responses with their `Retry-After`.'
      operationId: order_create_sync_v2_orders_sync_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrder'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '409':
          description: Business rule rejection
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/OrderRejectResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      x-openai-isConsequential: true
  /v2/orders:
    get:
      summary: Orders List
      operationId: orders_list_v2_orders_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: Error message explaining why the request is unauthorized.
                additionalProperties: true
    post:
      summary: Order Create
      description: 'Submit an order via Alpaca''s `/v2/orders`.


        Requires `X-API-Key`, forwards 429 responses with `Retry-After`, and

        applies the limit guard (extended-hours must be DAY limit orders).'
      operationId: order_create_v2_orders_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrder'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '409':
          description: Business rule rejection
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/OrderRejectResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      x-openai-isConsequential: true
    delete:
      summary: Orders Cancel All
      description: Cancel all open orders.
      operationId: orders_cancel_all_v2_orders_delete
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: Error message explaining why the request is unauthorized.
                additionalProperties: true
      x-openai-isConsequential: true
  /analysis/order-plan:
    post:
      summary: Review proposed Alpaca orders with GPT-5
      description: Use GPT-5 Structured Output to review proposed orders and return
        a JSON execution plan with adjustments and risk notes.
      operationId: analyse_order_plan_analysis_order_plan_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderPlanRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPlanResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v2/account:
    get:
      summary: Account Get
      operationId: account_get_v2_account_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: Error message explaining why the request is unauthorized.
                additionalProperties: true
  /v2/account/activities:
    get:
      summary: Account Activities
      operationId: account_activities_v2_account_activities_get
      parameters:
      - name: activity_type
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Activity Type
      - name: date
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Date
      - name: until
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Until
      - name: after
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: After
      - name: direction
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Direction
      - name: page_size
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          title: Page Size
      - name: page_token
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Page Token
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v2/orders/{order_id}:
    get:
      summary: Orders Get By Id
      operationId: orders_get_by_id_v2_orders__order_id__get
      parameters:
      - name: order_id
        in: path
        required: true
        schema:
          type: string
          title: Order Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      summary: Orders Cancel By Id
      description: Cancel a specific order by id.
      operationId: orders_cancel_by_id_v2_orders__order_id__delete
      parameters:
      - name: order_id
        in: path
        required: true
        schema:
          type: string
          title: Order Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      x-openai-isConsequential: true
    patch:
      summary: Order Replace
      operationId: order_replace_v2_orders_order_id_patch
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: Error message explaining why the request is unauthorized.
                additionalProperties: true
      description: Modify an existing order.
      parameters:
      - name: order_id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Order fields to update.
              additionalProperties: true
        required: true
  /v2/positions:
    get:
      summary: Positions List V2
      operationId: positions_list_v2_v2_positions_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: Error message explaining why the request is unauthorized.
                additionalProperties: true
    delete:
      summary: Positions Close All
      operationId: positions_close_all_v2_positions_delete
      parameters:
      - name: cancel_orders
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Cancel Orders
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      x-openai-isConsequential: true
  /v2/positions/{symbol}:
    get:
      summary: Positions Get
      operationId: positions_get_v2_positions__symbol__get
      parameters:
      - name: symbol
        in: path
        required: true
        schema:
          type: string
          title: Symbol
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      summary: Positions Close
      operationId: positions_close_v2_positions__symbol__delete
      parameters:
      - name: symbol
        in: path
        required: true
        schema:
          type: string
          title: Symbol
      - name: cancel_orders
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Cancel Orders
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      x-openai-isConsequential: true
  /v2/watchlists:
    get:
      summary: Watchlists List V2
      operationId: watchlists_list_v2_v2_watchlists_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: Error message explaining why the request is unauthorized.
                additionalProperties: true
    post:
      summary: Watchlists Create V2
      operationId: watchlists_create_v2_v2_watchlists_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WatchlistIn'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      x-openai-isConsequential: true
  /v2/watchlists/{watchlist_id}:
    delete:
      operationId: watchlists_delete_v2_v2_watchlists__watchlist_id__delete
      parameters:
      - in: path
        name: watchlist_id
        required: true
        schema:
          title: Watchlist Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Watchlists Delete V2
      x-openai-isConsequential: true
    get:
      operationId: watchlists_get_v2_v2_watchlists__watchlist_id__get
      parameters:
      - in: path
        name: watchlist_id
        required: true
        schema:
          title: Watchlist Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Watchlists Get V2
    post:
      operationId: watchlists_add_asset_v2_v2_watchlists__watchlist_id__post
      parameters:
      - in: path
        name: watchlist_id
        required: true
        schema:
          title: Watchlist Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WatchlistEntryPatch'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Watchlists Add Asset V2
    put:
      operationId: watchlists_update_v2_v2_watchlists__watchlist_id__put
      parameters:
      - in: path
        name: watchlist_id
        required: true
        schema:
          title: Watchlist Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WatchlistIn'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Watchlists Update V2
      x-openai-isConsequential: true
  /v2/quotes:
    get:
      summary: Get Quotes V2
      operationId: get_quotes_v2_v2_quotes_get
      parameters:
      - name: symbol
        in: query
        required: true
        schema:
          type: string
          title: Symbol
      - name: start
        in: query
        required: true
        schema:
          type: string
          title: Start
      - name: end
        in: query
        required: true
        schema:
          type: string
          title: End
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties: true
                title: Response Get Quotes V2 V2 Quotes Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v2/trades:
    get:
      summary: Get Trades V2
      operationId: get_trades_v2_v2_trades_get
      parameters:
      - name: symbol
        in: query
        required: true
        schema:
          type: string
          title: Symbol
      - name: start
        in: query
        required: true
        schema:
          type: string
          title: Start
      - name: end
        in: query
        required: true
        schema:
          type: string
          title: End
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties: true
                title: Response Get Trades V2 V2 Trades Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v2/bars:
    get:
      summary: Get Bars V2
      operationId: get_bars_v2_v2_bars_get
      parameters:
      - name: symbol
        in: query
        required: true
        schema:
          type: string
          title: Symbol
      - name: timeframe
        in: query
        required: false
        schema:
          type: string
          default: 1Day
          title: Timeframe
      - name: start
        in: query
        required: true
        schema:
          type: string
          title: Start
      - name: end
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: End
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties: true
                title: Response Get Bars V2 V2 Bars Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v2/account/configurations:
    get:
      operationId: account_configurations_get_v2_account_configurations_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Account Configurations Get
    patch:
      operationId: account_configurations_patch_v2_account_configurations_patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountConfigurationUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Account Configurations Patch
  /v2/account/portfolio/history:
    get:
      summary: Portfolio History
      operationId: portfolio_history_get_v2_account_portfolio_history_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: Error message explaining why the request is unauthorized.
                additionalProperties: true
      description: Get portfolio equity history for the account.
      parameters:
      - name: period
        in: query
        required: false
        schema:
          type: string
      - name: timeframe
        in: query
        required: false
        schema:
          type: string
      - name: intraday_reporting
        in: query
        required: false
        schema:
          type: string
      - name: start
        in: query
        required: false
        schema:
          type: string
      - name: pnl_reset
        in: query
        required: false
        schema:
          type: string
      - name: end
        in: query
        required: false
        schema:
          type: string
      - name: date_end
        in: query
        required: false
        schema:
          type: string
      - name: cashflow_types
        in: query
        required: false
        schema:
          type: string
      - name: extended_hours
        in: query
        required: false
        schema:
          type: boolean
  /v2/assets:
    get:
      summary: Assets List
      operationId: assets_list_v2_assets_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: Error message explaining why the request is unauthorized.
                additionalProperties: true
      description: List assets available for trading.
      parameters:
      - name: status
        in: query
        required: false
        schema:
          type: string
      - name: asset_class
        in: query
        required: false
        schema:
          type: string
      - name: exchange
        in: query
        required: false
        schema:
          type: string
      - name: attributes
        in: query
        required: false
        schema:
          type: string
  /v2/assets/{asset_id_or_symbol}:
    get:
      summary: Asset Get
      operationId: asset_get_v2_assets_asset_id_or_symbol_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: Error message explaining why the request is unauthorized.
                additionalProperties: true
      description: Retrieve information about a specific asset.
      parameters:
      - name: asset_id_or_symbol
        in: path
        required: true
        schema:
          type: string
  /v2/calendar:
    get:
      summary: Calendar
      operationId: calendar_list_v2_calendar_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: Error message explaining why the request is unauthorized.
                additionalProperties: true
      description: Retrieve market calendar entries.
      parameters:
      - name: start
        in: query
        required: false
        schema:
          type: string
          format: date
      - name: end
        in: query
        required: false
        schema:
          type: string
          format: date
  /v2/clock:
    get:
      summary: Clock
      operationId: clock_get_v2_clock_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: Error message explaining why the request is unauthorized.
                additionalProperties: true
      description: Get the current market clock.
  /v2/corporate_actions/announcements:
    get:
      summary: Corporate Actions Announcements
      operationId: corporate_actions_announcements_list_v2_corporate_actions_announcements_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: Error message explaining why the request is unauthorized.
                additionalProperties: true
      description: List corporate action announcements.
      parameters:
      - name: ca_types
        in: query
        required: false
        schema:
          type: string
      - name: ca_sub_types
        in: query
        required: false
        schema:
          type: string
      - name: symbol
        in: query
        required: false
        schema:
          type: string
      - name: date_type
        in: query
        required: false
        schema:
          type: string
      - name: start
        in: query
        required: false
        schema:
          type: string
          format: date
      - name: end
        in: query
        required: false
        schema:
          type: string
          format: date
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
      - name: page_token
        in: query
        required: false
        schema:
          type: string
  /v2/corporate_actions/announcements/{announcement_id}:
    get:
      summary: Corporate Actions Announcement Get
      operationId: corporate_actions_announcement_get_v2_corporate_actions_announcements_announcement_id_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: Error message explaining why the request is unauthorized.
                additionalProperties: true
      description: Retrieve a specific corporate action announcement.
      parameters:
      - name: announcement_id
        in: path
        required: true
        schema:
          type: string
  /v2/options/contracts:
    get:
      summary: Option Contracts
      operationId: option_contracts_list_v2_options_contracts_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: Error message explaining why the request is unauthorized.
                additionalProperties: true
      description: List option contracts.
      parameters:
      - name: symbol
        in: query
        required: false
        schema:
          type: string
      - name: status
        in: query
        required: false
        schema:
          type: string
      - name: contract_type
        in: query
        required: false
        schema:
          type: string
      - name: expiration_date
        in: query
        required: false
        schema:
          type: string
          format: date
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
      - name: page_token
        in: query
        required: false
        schema:
          type: string
      - name: sort
        in: query
        required: false
        schema:
          type: string
  /v2/options/contracts/{contract_id}:
    get:
      summary: Option Contract Get
      operationId: option_contract_get_v2_options_contracts_contract_id_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: Error message explaining why the request is unauthorized.
                additionalProperties: true
      description: Retrieve a specific option contract.
      parameters:
      - name: contract_id
        in: path
        required: true
        schema:
          type: string
  /v2/orders:by_client_order_id:
    get:
      summary: Order Get By Client ID
      operationId: order_get_by_client_id_v2_orders_by_client_order_id_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: Error message explaining why the request is unauthorized.
                additionalProperties: true
      description: Retrieve an order by client order identifier.
      parameters:
      - name: client_order_id
        in: query
        required: true
        schema:
          type: string
  /v2/positions/{symbol_or_contract_id}/exercise:
    post:
      summary: Exercise Option Position
      operationId: exercise_option_position_v2_positions_symbol_or_contract_id_exercise_post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: Error message explaining why the request is unauthorized.
                additionalProperties: true
      description: Exercise an option position for the given contract.
      parameters:
      - name: symbol_or_contract_id
        in: path
        required: true
        schema:
          type: string
  /v2/watchlists/{watchlist_id}/{symbol}:
    delete:
      summary: Watchlist Remove Asset
      operationId: watchlist_remove_asset_v2_watchlists_watchlist_id_symbol_delete
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: Error message explaining why the request is unauthorized.
                additionalProperties: true
      description: Remove an asset from the specified watchlist.
      parameters:
      - name: watchlist_id
        in: path
        required: true
        schema:
          type: string
      - name: symbol
        in: path
        required: true
        schema:
          type: string
components:
  schemas:
    CreateOrder:
      properties:
        symbol:
          type: string
          title: Symbol
        side:
          type: string
          title: Side
          enum:
          - buy
          - sell
        qty:
          anyOf:
          - type: number
          - type: 'null'
          title: Qty
        notional:
          anyOf:
          - type: number
          - type: 'null'
          title: Notional
        type:
          type: string
          title: Type
          enum:
          - market
          - limit
          - stop
          - stop_limit
          - trailing_stop
        time_in_force:
          type: string
          title: Time In Force
          enum:
          - day
          - gtc
          - opg
          - cls
          - ioc
          - fok
        limit_price:
          anyOf:
          - type: number
          - type: 'null'
          title: Limit Price
        stop_price:
          anyOf:
          - type: number
          - type: 'null'
          title: Stop Price
        order_class:
          anyOf:
          - type: string
            enum:
            - simple
            - bracket
            - oco
            - oto
          - type: 'null'
          title: Order Class
        take_profit:
          anyOf:
          - $ref: '#/components/schemas/TakeProfitLeg'
          - type: 'null'
        stop_loss:
          anyOf:
          - $ref: '#/components/schemas/StopLossLeg'
          - type: 'null'
        extended_hours:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Extended Hours
        trail_price:
          anyOf:
          - type: number
          - type: 'null'
          title: Trail Price
        trail_percent:
          anyOf:
          - type: number
          - type: 'null'
          title: Trail Percent
        client_order_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Client Order Id
      additionalProperties: false
      type: object
      required:
      - symbol
      - side
      - type
      - time_in_force
      title: CreateOrder
      oneOf:
      - required:
        - qty
        properties:
          qty:
            type: number
        not:
          required:
          - notional
      - required:
        - notional
        properties:
          notional:
            type: number
        not:
          required:
          - qty
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    OrderIntent:
      properties:
        symbol:
          type: string
          maxLength: 12
          minLength: 1
          title: Symbol
          description: Ticker symbol to trade.
        side:
          type: string
          enum:
          - buy
          - sell
          title: Side
          description: Order side.
        order_type:
          type: string
          maxLength: 24
          minLength: 2
          title: Order Type
          description: Order type, e.g. market or limit.
        time_in_force:
          anyOf:
          - type: string
            maxLength: 12
          - type: 'null'
          title: Time In Force
          description: Time-in-force directive such as day or gtc.
        qty:
          anyOf:
          - type: number
            minimum: 0.0
          - type: 'null'
          title: Qty
          description: Quantity of shares to trade.
        notional:
          anyOf:
          - type: number
            minimum: 0.0
          - type: 'null'
          title: Notional
          description: Target notional in USD when quantity is omitted.
        limit_price:
          anyOf:
          - type: number
          - type: 'null'
          title: Limit Price
          description: Limit price for limit or stop-limit orders.
        stop_price:
          anyOf:
          - type: number
          - type: 'null'
          title: Stop Price
          description: Top-level stop price for standalone stop or stop-limit orders.
        trail_price:
          anyOf:
          - type: number
          - type: 'null'
          title: Trail Price
          description: Trailing stop price (ignored unless type is trailing_stop).
        trail_percent:
          anyOf:
          - type: number
          - type: 'null'
          title: Trail Percent
          description: Trailing stop percentage (ignored unless type is trailing_stop).
        take_profit:
          anyOf:
          - $ref: '#/components/schemas/TakeProfitLeg'
          - type: 'null'
          description: Optional take-profit child order details.
        stop_loss:
          anyOf:
          - $ref: '#/components/schemas/StopLossLeg'
          - type: 'null'
          description: Optional stop-loss child order details.
        notes:
          anyOf:
          - type: string
            maxLength: 400
          - type: 'null'
          title: Notes
          description: Additional human context about the order intent.
      additionalProperties: false
      type: object
      required:
      - symbol
      - side
      - order_type
      title: OrderIntent
    OrderPlanAdjustment:
      properties:
        field:
          type: string
          title: Field
          description: Order field to adjust, e.g. limit_price.
        suggested_value:
          anyOf:
          - type: string
          - type: 'null'
          title: Suggested Value
          description: Suggested replacement value, expressed as a string.
        rationale:
          type: string
          title: Rationale
          description: Reason for adjusting this field.
      additionalProperties: false
      type: object
      required:
      - field
      - rationale
      title: OrderPlanAdjustment
    OrderPlanItem:
      properties:
        symbol:
          type: string
          title: Symbol
          description: Symbol under review.
        side:
          type: string
          enum:
          - buy
          - sell
          title: Side
          description: Side of the proposed trade.
        status:
          type: string
          enum:
          - approve
          - revise
          - reject
          title: Status
          description: High-level recommendation for the order.
        summary:
          type: string
          title: Summary
          description: Short natural-language summary of the guidance.
        reasoning:
          items:
            type: string
          type: array
          title: Reasoning
          description: Key reasoning bullet points.
        adjustments:
          items:
            $ref: '#/components/schemas/OrderPlanAdjustment'
          type: array
          title: Adjustments
          description: Structured adjustments before execution.
        risk_flags:
          items:
            type: string
          type: array
          title: Risk Flags
          description: Risks or guardrails to call out.
      additionalProperties: false
      type: object
      required:
      - symbol
      - side
      - status
      - summary
      title: OrderPlanItem
    OrderPlanRequest:
      properties:
        orders:
          items:
            $ref: '#/components/schemas/OrderIntent'
          type: array
          minItems: 1
          title: Orders
          description: Orders to evaluate.
        include_account:
          type: boolean
          title: Include Account
          description: Include Alpaca account snapshot in the analysis context.
          default: true
        include_positions:
          type: boolean
          title: Include Positions
          description: Include open positions to highlight sizing overlaps.
          default: true
        include_open_orders:
          type: boolean
          title: Include Open Orders
          description: Include currently open orders to detect duplicates.
          default: false
        risk_notes:
          anyOf:
          - type: string
            maxLength: 500
          - type: 'null'
          title: Risk Notes
          description: Additional risk or compliance constraints for the model to
            respect.
      additionalProperties: false
      type: object
      required:
      - orders
      title: OrderPlanRequest
    OrderPlanResponse:
      properties:
        execution_ready:
          type: boolean
          title: Execution Ready
          description: Whether the orders can be sent as-is.
        plan_summary:
          type: string
          title: Plan Summary
          description: Overall synopsis of the execution plan.
        orders:
          items:
            $ref: '#/components/schemas/OrderPlanItem'
          type: array
          title: Orders
          description: Per-order recommendations.
        account_notes:
          items:
            type: string
          type: array
          title: Account Notes
          description: Account-level callouts (margin, buying power, etc.).
        follow_up_tasks:
          items:
            type: string
          type: array
          title: Follow Up Tasks
          description: Actionable next steps for the assistant or trader.
      additionalProperties: false
      type: object
      required:
      - execution_ready
      - plan_summary
      title: OrderPlanResponse
    OrderRejectResponse:
      properties:
        type:
          type: string
          title: Type
          default: https://errors.alpaca/ORDER_REJECTED
        title:
          type: string
          title: Title
          default: Order rejected
        status:
          const: 409
          title: Status
          default: 409
        detail:
          type: string
          title: Detail
        reason_code:
          type: string
          title: Reason Code
        context:
          anyOf:
          - type: object
          - type: 'null'
          title: Context
      type: object
      required:
      - detail
      - reason_code
      title: OrderRejectResponse
    StopLossLeg:
      properties:
        stop_price:
          type: number
          title: Stop Price
          description: Trigger price for the stop-loss child leg (e.g., 225.0).
        limit_price:
          anyOf:
          - type: number
          - type: 'null'
          title: Limit Price
          description: Optional limit price for a stop-limit child leg. Omit to use
            a market stop; set slightly below the stop (e.g., 224.0) when a limit
            is required.
      additionalProperties: false
      type: object
      required:
      - stop_price
      title: StopLossLeg
    TakeProfitLeg:
      properties:
        limit_price:
          type: number
          title: Limit Price
          description: Limit price for the take-profit child leg.
      additionalProperties: false
      type: object
      required:
      - limit_price
      title: TakeProfitLeg
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
    WatchlistIn:
      properties:
        name:
          type: string
          title: Name
        symbols:
          items:
            type: string
          type: array
          title: Symbols
      type: object
      required:
      - name
      - symbols
      title: WatchlistIn
    OrderResponse:
      type: object
      additionalProperties: true
      required:
      - id
      - symbol
      - status
      properties:
        id:
          type: string
          title: Order ID
          description: Unique Alpaca order identifier.
        client_order_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Client Order ID
        symbol:
          type: string
          title: Symbol
        status:
          type: string
          title: Status
          description: Current order status reported by Alpaca.
        side:
          anyOf:
          - type: string
          - type: 'null'
          title: Side
        type:
          anyOf:
          - type: string
          - type: 'null'
          title: Type
        order_class:
          anyOf:
          - type: string
          - type: 'null'
          title: Order Class
        time_in_force:
          anyOf:
          - type: string
          - type: 'null'
          title: Time In Force
        qty:
          anyOf:
          - type: string
          - type: 'null'
          title: Qty
        notional:
          anyOf:
          - type: string
          - type: 'null'
          title: Notional
        limit_price:
          anyOf:
          - type: string
          - type: 'null'
          title: Limit Price
        stop_price:
          anyOf:
          - type: string
          - type: 'null'
          title: Stop Price
        filled_qty:
          anyOf:
          - type: string
          - type: 'null'
          title: Filled Qty
        submitted_at:
          anyOf:
          - type: string
          - type: 'null'
          title: Submitted At
        updated_at:
          anyOf:
          - type: string
          - type: 'null'
          title: Updated At
        extended_hours:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Extended Hours
        legs:
          anyOf:
          - type: array
            items:
              type: object
              additionalProperties: true
          - type: 'null'
          title: Legs
    AccountConfigurationUpdate:
      additionalProperties: true
      description: Matches Alpaca account configuration fields (Oct 2025).
      properties:
        dtbp_check:
          anyOf:
          - type: string
          - type: 'null'
          description: Day-trade buying power check enforcement (none, entry, exit,
            both).
          title: Dtbp Check
        fractional_trading:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Enable fractional share trading.
          title: Fractional Trading
        max_margin_multiplier:
          anyOf:
          - type: string
          - type: 'null'
          description: Maximum intraday margin multiplier (e.g. '2', '4').
          title: Max Margin Multiplier
        no_shorting:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Disable all short sales when true.
          title: No Shorting
        pdt_check:
          anyOf:
          - type: string
          - type: 'null'
          description: Pattern day trading check behaviour (enforced, bypassed, entry_only).
          title: Pdt Check
        suspend_trade:
          anyOf:
          - type: boolean
          - type: 'null'
          description: If true, new orders are blocked at the account level.
          title: Suspend Trade
        trade_confirm_email:
          anyOf:
          - type: string
          - type: 'null'
          description: Email preference for order confirmations (all, none, trade_activity).
          title: Trade Confirm Email
      title: AccountConfigurationUpdate
      type: object
    WatchlistEntryPatch:
      additionalProperties: false
      description: Payload for adding an asset to an existing watchlist.
      properties:
        asset_id:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: UUID of the asset when symbol lookup is ambiguous.
          title: Asset Id
        symbol:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: Ticker symbol to add (symbol or asset_id required by Oct 2025
            docs).
          title: Symbol
      title: WatchlistEntryPatch
      type: object
  securitySchemes:
    EdgeApiKey:
      type: apiKey
      in: header
      name: X-API-Key
jsonSchemaDialect: https://json-schema.org/draft/2020-12/schema
security:
- EdgeApiKey: []
servers:
- url: https://alpaca-py-production.up.railway.app
