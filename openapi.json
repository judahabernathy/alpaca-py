{
  "components": {
    "schemas": {
      "AccountConfigurationUpdate": {
        "additionalProperties": true,
        "description": "Matches Alpaca account configuration fields (Oct 2025).",
        "properties": {
          "dtbp_check": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Day-trade buying power check enforcement (none, entry, exit, both).",
            "title": "Dtbp Check"
          },
          "fractional_trading": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "description": "Enable fractional share trading.",
            "title": "Fractional Trading"
          },
          "max_margin_multiplier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Maximum intraday margin multiplier (e.g. '2', '4').",
            "title": "Max Margin Multiplier"
          },
          "no_shorting": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "description": "Disable all short sales when true.",
            "title": "No Shorting"
          },
          "pdt_check": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Pattern day trading check behaviour (enforced, bypassed, entry_only).",
            "title": "Pdt Check"
          },
          "suspend_trade": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "description": "If true, new orders are blocked at the account level.",
            "title": "Suspend Trade"
          },
          "trade_confirm_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Email preference for order confirmations (all, none, trade_activity).",
            "title": "Trade Confirm Email"
          }
        },
        "title": "AccountConfigurationUpdate",
        "type": "object"
      },
      "CreateOrder": {
        "additionalProperties": false,
        "oneOf": [
          {
            "not": {
              "required": [
                "notional"
              ]
            },
            "properties": {
              "qty": {
                "type": "number"
              }
            },
            "required": [
              "qty"
            ]
          },
          {
            "not": {
              "required": [
                "qty"
              ]
            },
            "properties": {
              "notional": {
                "type": "number"
              }
            },
            "required": [
              "notional"
            ]
          }
        ],
        "properties": {
          "client_order_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Order Id"
          },
          "extended_hours": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extended Hours"
          },
          "limit_price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limit Price"
          },
          "notional": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notional"
          },
          "order_class": {
            "anyOf": [
              {
                "enum": [
                  "simple",
                  "bracket",
                  "oco",
                  "oto"
                ],
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Order Class"
          },
          "qty": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Qty"
          },
          "side": {
            "enum": [
              "buy",
              "sell"
            ],
            "title": "Side",
            "type": "string"
          },
          "stop_loss": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StopLossLeg"
              },
              {
                "type": "null"
              }
            ]
          },
          "stop_price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stop Price"
          },
          "symbol": {
            "title": "Symbol",
            "type": "string"
          },
          "take_profit": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TakeProfitLeg"
              },
              {
                "type": "null"
              }
            ]
          },
          "time_in_force": {
            "enum": [
              "day",
              "gtc",
              "opg",
              "cls",
              "ioc",
              "fok"
            ],
            "title": "Time In Force",
            "type": "string"
          },
          "trail_percent": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trail Percent"
          },
          "trail_price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trail Price"
          },
          "type": {
            "enum": [
              "market",
              "limit",
              "stop",
              "stop_limit",
              "trailing_stop"
            ],
            "title": "Type",
            "type": "string"
          }
        },
        "required": [
          "symbol",
          "side",
          "type",
          "time_in_force"
        ],
        "title": "CreateOrder",
        "type": "object"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "title": "Detail",
            "type": "array"
          }
        },
        "title": "HTTPValidationError",
        "type": "object"
      },
      "OrderIntent": {
        "additionalProperties": false,
        "properties": {
          "limit_price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "description": "Limit price for limit or stop-limit orders.",
            "title": "Limit Price"
          },
          "notes": {
            "anyOf": [
              {
                "maxLength": 400,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Additional human context about the order intent.",
            "title": "Notes"
          },
          "notional": {
            "anyOf": [
              {
                "minimum": 0.0,
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "description": "Target notional in USD when quantity is omitted.",
            "title": "Notional"
          },
          "order_type": {
            "description": "Order type, e.g. market or limit.",
            "maxLength": 24,
            "minLength": 2,
            "title": "Order Type",
            "type": "string"
          },
          "qty": {
            "anyOf": [
              {
                "minimum": 0.0,
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "description": "Quantity of shares to trade.",
            "title": "Qty"
          },
          "side": {
            "description": "Order side.",
            "enum": [
              "buy",
              "sell"
            ],
            "title": "Side",
            "type": "string"
          },
          "stop_loss": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StopLossLeg"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional stop-loss child order details."
          },
          "stop_price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "description": "Top-level stop price for standalone stop or stop-limit orders.",
            "title": "Stop Price"
          },
          "symbol": {
            "description": "Ticker symbol to trade.",
            "maxLength": 12,
            "minLength": 1,
            "title": "Symbol",
            "type": "string"
          },
          "take_profit": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TakeProfitLeg"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional take-profit child order details."
          },
          "time_in_force": {
            "anyOf": [
              {
                "maxLength": 12,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Time-in-force directive such as day or gtc.",
            "title": "Time In Force"
          },
          "trail_percent": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "description": "Trailing stop percentage (ignored unless type is trailing_stop).",
            "title": "Trail Percent"
          },
          "trail_price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "description": "Trailing stop price (ignored unless type is trailing_stop).",
            "title": "Trail Price"
          }
        },
        "required": [
          "symbol",
          "side",
          "order_type"
        ],
        "title": "OrderIntent",
        "type": "object"
      },
      "OrderPlanAdjustment": {
        "additionalProperties": false,
        "properties": {
          "field": {
            "description": "Order field to adjust, e.g. limit_price.",
            "title": "Field",
            "type": "string"
          },
          "rationale": {
            "description": "Reason for adjusting this field.",
            "title": "Rationale",
            "type": "string"
          },
          "suggested_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Suggested replacement value, expressed as a string.",
            "title": "Suggested Value"
          }
        },
        "required": [
          "field",
          "rationale"
        ],
        "title": "OrderPlanAdjustment",
        "type": "object"
      },
      "OrderPlanItem": {
        "additionalProperties": false,
        "properties": {
          "adjustments": {
            "description": "Structured adjustments before execution.",
            "items": {
              "$ref": "#/components/schemas/OrderPlanAdjustment"
            },
            "title": "Adjustments",
            "type": "array"
          },
          "reasoning": {
            "description": "Key reasoning bullet points.",
            "items": {
              "type": "string"
            },
            "title": "Reasoning",
            "type": "array"
          },
          "risk_flags": {
            "description": "Risks or guardrails to call out.",
            "items": {
              "type": "string"
            },
            "title": "Risk Flags",
            "type": "array"
          },
          "side": {
            "description": "Side of the proposed trade.",
            "enum": [
              "buy",
              "sell"
            ],
            "title": "Side",
            "type": "string"
          },
          "status": {
            "description": "High-level recommendation for the order.",
            "enum": [
              "approve",
              "revise",
              "reject"
            ],
            "title": "Status",
            "type": "string"
          },
          "summary": {
            "description": "Short natural-language summary of the guidance.",
            "title": "Summary",
            "type": "string"
          },
          "symbol": {
            "description": "Symbol under review.",
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol",
          "side",
          "status",
          "summary"
        ],
        "title": "OrderPlanItem",
        "type": "object"
      },
      "OrderPlanRequest": {
        "additionalProperties": false,
        "properties": {
          "include_account": {
            "default": true,
            "description": "Include Alpaca account snapshot in the analysis context.",
            "title": "Include Account",
            "type": "boolean"
          },
          "include_open_orders": {
            "default": false,
            "description": "Include currently open orders to detect duplicates.",
            "title": "Include Open Orders",
            "type": "boolean"
          },
          "include_positions": {
            "default": true,
            "description": "Include open positions to highlight sizing overlaps.",
            "title": "Include Positions",
            "type": "boolean"
          },
          "orders": {
            "description": "Orders to evaluate.",
            "items": {
              "$ref": "#/components/schemas/OrderIntent"
            },
            "minItems": 1,
            "title": "Orders",
            "type": "array"
          },
          "risk_notes": {
            "anyOf": [
              {
                "maxLength": 500,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Additional risk or compliance constraints for the model to respect.",
            "title": "Risk Notes"
          }
        },
        "required": [
          "orders"
        ],
        "title": "OrderPlanRequest",
        "type": "object"
      },
      "OrderPlanResponse": {
        "additionalProperties": false,
        "properties": {
          "account_notes": {
            "description": "Account-level callouts (margin, buying power, etc.).",
            "items": {
              "type": "string"
            },
            "title": "Account Notes",
            "type": "array"
          },
          "execution_ready": {
            "description": "Whether the orders can be sent as-is.",
            "title": "Execution Ready",
            "type": "boolean"
          },
          "follow_up_tasks": {
            "description": "Actionable next steps for the assistant or trader.",
            "items": {
              "type": "string"
            },
            "title": "Follow Up Tasks",
            "type": "array"
          },
          "orders": {
            "description": "Per-order recommendations.",
            "items": {
              "$ref": "#/components/schemas/OrderPlanItem"
            },
            "title": "Orders",
            "type": "array"
          },
          "plan_summary": {
            "description": "Overall synopsis of the execution plan.",
            "title": "Plan Summary",
            "type": "string"
          }
        },
        "required": [
          "execution_ready",
          "plan_summary"
        ],
        "title": "OrderPlanResponse",
        "type": "object"
      },
      "OrderRejectResponse": {
        "properties": {
          "context": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          },
          "reason_code": {
            "title": "Reason Code",
            "type": "string"
          },
          "status": {
            "const": 409,
            "default": 409,
            "title": "Status"
          },
          "title": {
            "default": "Order rejected",
            "title": "Title",
            "type": "string"
          },
          "type": {
            "default": "https://errors.alpaca/ORDER_REJECTED",
            "title": "Type",
            "type": "string"
          }
        },
        "required": [
          "detail",
          "reason_code"
        ],
        "title": "OrderRejectResponse",
        "type": "object"
      },
      "OrderResponse": {
        "additionalProperties": true,
        "properties": {
          "client_order_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Order ID"
          },
          "extended_hours": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extended Hours"
          },
          "filled_qty": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filled Qty"
          },
          "id": {
            "description": "Unique Alpaca order identifier.",
            "title": "Order ID",
            "type": "string"
          },
          "legs": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Legs"
          },
          "limit_price": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limit Price"
          },
          "notional": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notional"
          },
          "order_class": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Order Class"
          },
          "qty": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Qty"
          },
          "side": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Side"
          },
          "status": {
            "description": "Current order status reported by Alpaca.",
            "title": "Status",
            "type": "string"
          },
          "stop_price": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stop Price"
          },
          "submitted_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Submitted At"
          },
          "symbol": {
            "title": "Symbol",
            "type": "string"
          },
          "time_in_force": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Time In Force"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "required": [
          "id",
          "symbol",
          "status"
        ],
        "type": "object"
      },
      "StopLossLeg": {
        "additionalProperties": false,
        "properties": {
          "limit_price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional limit price for a stop-limit child leg. Omit to use a market stop; set slightly below the stop (e.g., 224.0) when a limit is required.",
            "title": "Limit Price"
          },
          "stop_price": {
            "description": "Trigger price for the stop-loss child leg (e.g., 225.0).",
            "title": "Stop Price",
            "type": "number"
          }
        },
        "required": [
          "stop_price"
        ],
        "title": "StopLossLeg",
        "type": "object"
      },
      "TakeProfitLeg": {
        "additionalProperties": false,
        "properties": {
          "limit_price": {
            "description": "Limit price for the take-profit child leg.",
            "title": "Limit Price",
            "type": "number"
          }
        },
        "required": [
          "limit_price"
        ],
        "title": "TakeProfitLeg",
        "type": "object"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "title": "Location",
            "type": "array"
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        },
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError",
        "type": "object"
      },
      "WatchlistEntryPatch": {
        "additionalProperties": false,
        "description": "Payload for adding an asset to an existing watchlist.",
        "properties": {
          "asset_id": {
            "anyOf": [
              {
                "minLength": 1,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "UUID of the asset when symbol lookup is ambiguous.",
            "title": "Asset Id"
          },
          "symbol": {
            "anyOf": [
              {
                "minLength": 1,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Ticker symbol to add (symbol or asset_id required by Oct 2025 docs).",
            "title": "Symbol"
          }
        },
        "title": "WatchlistEntryPatch",
        "type": "object"
      },
      "WatchlistIn": {
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "symbols": {
            "items": {
              "type": "string"
            },
            "title": "Symbols",
            "type": "array"
          }
        },
        "required": [
          "name",
          "symbols"
        ],
        "title": "WatchlistIn",
        "type": "object"
      }
    },
    "securitySchemes": {
      "EdgeApiKey": {
        "in": "header",
        "name": "X-API-Key",
        "type": "apiKey"
      }
    }
  },
  "info": {
    "description": "All endpoints require the `X-API-Key` header; the `api_key` query parameter is\nsupported as a compatibility fallback. The service propagates Alpaca's rate\nlimits as HTTP 429 responses and surfaces the upstream `Retry-After` header.\nWhen `extended_hours` is enabled the order payload must remain a DAY limit\norder, include `limit_price`, and omit advanced `order_class` values.",
    "license": {
      "name": "Proprietary",
      "url": "https://alpaca-py-production.up.railway.app/legal"
    },
    "title": "Alpaca Wrapper",
    "version": "1.1.0"
  },
  "jsonSchemaDialect": "https://json-schema.org/draft/2020-12/schema",
  "openapi": "3.1.0",
  "paths": {
    "/healthz": {
      "get": {
        "operationId": "healthz_healthz_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "properties": {
                    "detail": {
                      "description": "Explanation of the rate limit condition.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Rate limited"
          }
        },
        "summary": "Healthz"
      }
    },
    "/v2/account": {
      "get": {
        "operationId": "account_get_v2_account_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "properties": {
                    "detail": {
                      "description": "Error message explaining why the request is unauthorized.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "summary": "Account Get"
      }
    },
    "/v2/account/activities": {
      "get": {
        "operationId": "account_activities_v2_account_activities_get",
        "parameters": [
          {
            "in": "query",
            "name": "activity_type",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Activity Type"
            }
          },
          {
            "in": "query",
            "name": "date",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date"
            }
          },
          {
            "in": "query",
            "name": "until",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Until"
            }
          },
          {
            "in": "query",
            "name": "after",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "After"
            }
          },
          {
            "in": "query",
            "name": "direction",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Direction"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Page Size"
            }
          },
          {
            "in": "query",
            "name": "page_token",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Page Token"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Account Activities"
      }
    },
    "/v2/account/configurations": {
      "get": {
        "operationId": "account_configurations_get_v2_account_configurations_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Account Configurations Get"
      },
      "patch": {
        "operationId": "account_configurations_patch_v2_account_configurations_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountConfigurationUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Account Configurations Patch"
      }
    },
    "/v2/account/portfolio/history": {
      "get": {
        "description": "Get portfolio equity history for the account.",
        "operationId": "portfolio_history_get_v2_account_portfolio_history_get",
        "parameters": [
          {
            "in": "query",
            "name": "period",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "timeframe",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "intraday_reporting",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "pnl_reset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "end",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "date_end",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "cashflow_types",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "extended_hours",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "properties": {
                    "detail": {
                      "description": "Error message explaining why the request is unauthorized.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "summary": "Portfolio History"
      }
    },
    "/v2/assets": {
      "get": {
        "description": "List assets available for trading.",
        "operationId": "assets_list_v2_assets_get",
        "parameters": [
          {
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "asset_class",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exchange",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "attributes",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "properties": {
                    "detail": {
                      "description": "Error message explaining why the request is unauthorized.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "summary": "Assets List"
      }
    },
    "/v2/assets/{asset_id_or_symbol}": {
      "get": {
        "description": "Retrieve information about a specific asset.",
        "operationId": "asset_get_v2_assets_asset_id_or_symbol_get",
        "parameters": [
          {
            "in": "path",
            "name": "asset_id_or_symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "properties": {
                    "detail": {
                      "description": "Error message explaining why the request is unauthorized.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "summary": "Asset Get"
      }
    },
    "/v2/bars": {
      "get": {
        "operationId": "get_bars_v2_v2_bars_get",
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "title": "Symbol",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "timeframe",
            "required": false,
            "schema": {
              "default": "1Day",
              "title": "Timeframe",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "start",
            "required": true,
            "schema": {
              "title": "Start",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "end",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "title": "Response Get Bars V2 V2 Bars Get",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Get Bars V2"
      }
    },
    "/v2/calendar": {
      "get": {
        "description": "Retrieve market calendar entries.",
        "operationId": "calendar_list_v2_calendar_get",
        "parameters": [
          {
            "in": "query",
            "name": "start",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "end",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "properties": {
                    "detail": {
                      "description": "Error message explaining why the request is unauthorized.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "summary": "Calendar"
      }
    },
    "/v2/clock": {
      "get": {
        "description": "Get the current market clock.",
        "operationId": "clock_get_v2_clock_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "properties": {
                    "detail": {
                      "description": "Error message explaining why the request is unauthorized.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "summary": "Clock"
      }
    },
    "/v2/orders": {
      "delete": {
        "description": "Cancel all open orders.",
        "operationId": "orders_cancel_all_v2_orders_delete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "properties": {
                    "detail": {
                      "description": "Error message explaining why the request is unauthorized.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "summary": "Orders Cancel All",
        "x-openai-isConsequential": true
      },
      "get": {
        "operationId": "orders_list_v2_orders_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "properties": {
                    "detail": {
                      "description": "Error message explaining why the request is unauthorized.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "summary": "Orders List"
      },
      "post": {
        "description": "Submit an order via Alpaca's `/v2/orders`.\n\nRequires `X-API-Key`, forwards 429 responses with `Retry-After`, and\napplies the limit guard (extended-hours must be DAY limit orders).",
        "operationId": "order_create_v2_orders_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrder"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "409": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderRejectResponse"
                }
              }
            },
            "description": "Business rule rejection"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Order Create",
        "x-openai-isConsequential": true
      }
    },
    "/v2/orders/{order_id}": {
      "delete": {
        "description": "Cancel a specific order by id.",
        "operationId": "orders_cancel_by_id_v2_orders__order_id__delete",
        "parameters": [
          {
            "in": "path",
            "name": "order_id",
            "required": true,
            "schema": {
              "title": "Order Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Orders Cancel By Id",
        "x-openai-isConsequential": true
      },
      "get": {
        "operationId": "orders_get_by_id_v2_orders__order_id__get",
        "parameters": [
          {
            "in": "path",
            "name": "order_id",
            "required": true,
            "schema": {
              "title": "Order Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Orders Get By Id"
      },
      "patch": {
        "description": "Modify an existing order.",
        "operationId": "order_replace_v2_orders_order_id_patch",
        "parameters": [
          {
            "in": "path",
            "name": "order_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "description": "Order fields to update.",
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "properties": {
                    "detail": {
                      "description": "Error message explaining why the request is unauthorized.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "summary": "Order Replace"
      }
    },
    "/v2/orders:by_client_order_id": {
      "get": {
        "description": "Retrieve an order by client order identifier.",
        "operationId": "order_get_by_client_id_v2_orders_by_client_order_id_get",
        "parameters": [
          {
            "in": "query",
            "name": "client_order_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "properties": {
                    "detail": {
                      "description": "Error message explaining why the request is unauthorized.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "summary": "Order Get By Client ID"
      }
    },
    "/v2/positions": {
      "delete": {
        "operationId": "positions_close_all_v2_positions_delete",
        "parameters": [
          {
            "in": "query",
            "name": "cancel_orders",
            "required": false,
            "schema": {
              "default": false,
              "title": "Cancel Orders",
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Positions Close All",
        "x-openai-isConsequential": true
      },
      "get": {
        "operationId": "positions_list_v2_v2_positions_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "properties": {
                    "detail": {
                      "description": "Error message explaining why the request is unauthorized.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "summary": "Positions List V2"
      }
    },
    "/v2/positions/{symbol}": {
      "delete": {
        "operationId": "positions_close_v2_positions__symbol__delete",
        "parameters": [
          {
            "in": "path",
            "name": "symbol",
            "required": true,
            "schema": {
              "title": "Symbol",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "cancel_orders",
            "required": false,
            "schema": {
              "default": false,
              "title": "Cancel Orders",
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Positions Close",
        "x-openai-isConsequential": true
      },
      "get": {
        "operationId": "positions_get_v2_positions__symbol__get",
        "parameters": [
          {
            "in": "path",
            "name": "symbol",
            "required": true,
            "schema": {
              "title": "Symbol",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Positions Get"
      }
    },
    "/v2/quotes": {
      "get": {
        "operationId": "get_quotes_v2_v2_quotes_get",
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "title": "Symbol",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "start",
            "required": true,
            "schema": {
              "title": "Start",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "end",
            "required": true,
            "schema": {
              "title": "End",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "title": "Response Get Quotes V2 V2 Quotes Get",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Get Quotes V2"
      }
    },
    "/v2/trades": {
      "get": {
        "operationId": "get_trades_v2_v2_trades_get",
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "required": true,
            "schema": {
              "title": "Symbol",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "start",
            "required": true,
            "schema": {
              "title": "Start",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "end",
            "required": true,
            "schema": {
              "title": "End",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "title": "Response Get Trades V2 V2 Trades Get",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Get Trades V2"
      }
    },
    "/v2/watchlists": {
      "get": {
        "operationId": "watchlists_list_v2_v2_watchlists_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "properties": {
                    "detail": {
                      "description": "Error message explaining why the request is unauthorized.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "summary": "Watchlists List V2"
      },
      "post": {
        "operationId": "watchlists_create_v2_v2_watchlists_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WatchlistIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Watchlists Create V2",
        "x-openai-isConsequential": true
      }
    },
    "/v2/watchlists/{watchlist_id}": {
      "get": {
        "operationId": "watchlists_get_v2_v2_watchlists__watchlist_id__get",
        "parameters": [
          {
            "in": "path",
            "name": "watchlist_id",
            "required": true,
            "schema": {
              "title": "Watchlist Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Watchlists Get V2"
      },
      "post": {
        "operationId": "watchlists_add_asset_v2_v2_watchlists__watchlist_id__post",
        "parameters": [
          {
            "in": "path",
            "name": "watchlist_id",
            "required": true,
            "schema": {
              "title": "Watchlist Id",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WatchlistEntryPatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Watchlists Add Asset V2"
      }
    },
    "/v2/watchlists/{watchlist_id}/{symbol}": {
      "delete": {
        "description": "Remove an asset from the specified watchlist.",
        "operationId": "watchlist_remove_asset_v2_watchlists_watchlist_id_symbol_delete",
        "parameters": [
          {
            "in": "path",
            "name": "watchlist_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "properties": {
                    "detail": {
                      "description": "Error message explaining why the request is unauthorized.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "summary": "Watchlist Remove Asset"
      }
    }
  },
  "security": [
    {
      "EdgeApiKey": []
    }
  ],
  "servers": [
    {
      "url": "https://alpaca-py-production.up.railway.app"
    }
  ]
}
