name: CI

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml', 'poetry.lock') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .[dev]
      - name: Run pytest
        run: python -m pytest
      - name: Ruff check
        run: ruff check .
      - name: Mypy type check
        run: mypy .
      - name: Export OpenAPI specification
        run: python tools/export_openapi.py
      - name: Upload OpenAPI artifact
        uses: actions/upload-artifact@v4
        with:
          name: openapi-${{ matrix.os }}-${{ matrix.python-version }}
          path: ./.well-known/openapi.*

  release-check:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Enforce semantic tag
        run: |
          python - <<'PY'
import os, re, sys
ref = os.environ.get('GITHUB_REF', '')
tag = ref.split('/')[-1]
if not re.fullmatch(r"v\d+\.\d+\.\d+", tag):
    print(f"Tag '{tag}' must follow vMAJOR.MINOR.PATCH", file=sys.stderr)
    sys.exit(1)
PY
      - name: Display derived version
        run: |
          python - <<'PY'
from pathlib import Path
print("pyproject version is managed by poetry-dynamic-versioning; release tag checked above.")
PY
